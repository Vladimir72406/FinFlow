//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessLogic
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FinflowEntities : DbContext
    {
        public FinflowEntities()
            : base("name=FinflowEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<c_status> c_status { get; set; }
        public virtual DbSet<Funds> Funds { get; set; }
        public virtual DbSet<l_linkStatus> l_linkStatus { get; set; }
        public virtual DbSet<person> person { get; set; }
        public virtual DbSet<Remittance> Remittance { get; set; }
        public virtual DbSet<Remittance_state_log> Remittance_state_log { get; set; }
    
        public virtual ObjectResult<get_person_Result> get_person(Nullable<int> person_id)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("person_id", person_id) :
                new ObjectParameter("person_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_person_Result>("get_person", person_idParameter);
        }
    
        public virtual int iud_person(Nullable<int> iud, ObjectParameter person_id, string name, string surname, Nullable<System.DateTime> dateOfBirth, ObjectParameter code, ObjectParameter str_result)
        {
            var iudParameter = iud.HasValue ?
                new ObjectParameter("iud", iud) :
                new ObjectParameter("iud", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("iud_person", iudParameter, person_id, nameParameter, surnameParameter, dateOfBirthParameter, code, str_result);
        }
    
        public virtual int iud_funds(Nullable<int> iud, ObjectParameter funds_id, Nullable<decimal> sendAmount, Nullable<int> sendCurrency, Nullable<decimal> receiveAmount, Nullable<int> receiveCurrency, Nullable<decimal> rate, Nullable<System.Guid> remittance_Id, ObjectParameter code, ObjectParameter error)
        {
            var iudParameter = iud.HasValue ?
                new ObjectParameter("iud", iud) :
                new ObjectParameter("iud", typeof(int));
    
            var sendAmountParameter = sendAmount.HasValue ?
                new ObjectParameter("SendAmount", sendAmount) :
                new ObjectParameter("SendAmount", typeof(decimal));
    
            var sendCurrencyParameter = sendCurrency.HasValue ?
                new ObjectParameter("SendCurrency", sendCurrency) :
                new ObjectParameter("SendCurrency", typeof(int));
    
            var receiveAmountParameter = receiveAmount.HasValue ?
                new ObjectParameter("ReceiveAmount", receiveAmount) :
                new ObjectParameter("ReceiveAmount", typeof(decimal));
    
            var receiveCurrencyParameter = receiveCurrency.HasValue ?
                new ObjectParameter("ReceiveCurrency", receiveCurrency) :
                new ObjectParameter("ReceiveCurrency", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var remittance_IdParameter = remittance_Id.HasValue ?
                new ObjectParameter("Remittance_Id", remittance_Id) :
                new ObjectParameter("Remittance_Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("iud_funds", iudParameter, funds_id, sendAmountParameter, sendCurrencyParameter, receiveAmountParameter, receiveCurrencyParameter, rateParameter, remittance_IdParameter, code, error);
        }
    
        public virtual int remittance_change_status(Nullable<System.Guid> remittance_Id, Nullable<int> c_status_id_new, ObjectParameter code, ObjectParameter error)
        {
            var remittance_IdParameter = remittance_Id.HasValue ?
                new ObjectParameter("Remittance_Id", remittance_Id) :
                new ObjectParameter("Remittance_Id", typeof(System.Guid));
    
            var c_status_id_newParameter = c_status_id_new.HasValue ?
                new ObjectParameter("c_status_id_new", c_status_id_new) :
                new ObjectParameter("c_status_id_new", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("remittance_change_status", remittance_IdParameter, c_status_id_newParameter, code, error);
        }
    
        public virtual int iud_remittance(Nullable<int> iud, ObjectParameter remittance_Id, string code, Nullable<int> c_status_id, Nullable<int> sender_id, Nullable<int> receiver_id, ObjectParameter code_result, ObjectParameter error)
        {
            var iudParameter = iud.HasValue ?
                new ObjectParameter("iud", iud) :
                new ObjectParameter("iud", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var c_status_idParameter = c_status_id.HasValue ?
                new ObjectParameter("c_status_id", c_status_id) :
                new ObjectParameter("c_status_id", typeof(int));
    
            var sender_idParameter = sender_id.HasValue ?
                new ObjectParameter("Sender_id", sender_id) :
                new ObjectParameter("Sender_id", typeof(int));
    
            var receiver_idParameter = receiver_id.HasValue ?
                new ObjectParameter("Receiver_id", receiver_id) :
                new ObjectParameter("Receiver_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("iud_remittance", iudParameter, remittance_Id, codeParameter, c_status_idParameter, sender_idParameter, receiver_idParameter, code_result, error);
        }
    }
}
